<Window x:Class="PolygonFiller.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:PolygonFiller"
        mc:Ignorable="d"
        WindowState="Maximized"
        DataContext="local:MainWindowViewModel"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <ContextMenu x:Key="vertexMenu">
            <MenuItem Header="Delete vertex"  Click="DeleteVertex_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="lineMenu">
            <MenuItem Header="Add vertex" Click="AddVertex_Click"/>
            <MenuItem Header="Fill polygon" Click="FillPolygon_Click"/>
            <MenuItem Header="Clip polygons" Click="Intersection_Click"/>
        </ContextMenu>
        <local:ComparisonConverter x:Key="comparisonConverter"/>
        <local:ColorConverter x:Key="colorConverter"/>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Background="#BDC8E2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Draw a polygon</Label>
                <WrapPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Name="DrawButton" Click="Draw_Click" Height="20" Width="50" Margin="5">draw</Button>
                    <Button Name="DeleteButton" Click="Button_Click" Height="20" Width="50" Margin="5">delete</Button>
                </WrapPanel>
            </StackPanel>
            <StackPanel Grid.Row="1">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Choose polygon color</Label>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <RadioButton Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" GroupName="ObjectColor" IsChecked="{Binding Path=ObjectColorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.none}}"/>
                    <Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center">None</Label>
                    <RadioButton Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" GroupName="ObjectColor" IsChecked="{Binding Path=ObjectColorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.constant}}"/>
                    <Label Grid.Column="1" Grid.Row="1">Solid</Label>
                    <xctk:ColorPicker Name="colorPicker" Grid.Column="2" Grid.Row="1" Margin="5" SelectedColor="{Binding Path=ObjectColor, Converter={StaticResource colorConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></xctk:ColorPicker>
                    <RadioButton Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" GroupName="ObjectColor" IsChecked="{Binding Path=ObjectColorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.fromTexture}}"/>
                    <Label Grid.Column="1" Grid.Row="2">From Texture</Label>
                    <Image Grid.Column="2" Grid.Row="2"  Margin="5" Width="70" Height="20" Stretch="Uniform" Source="{Binding Path=ChosenTexture}" />
                    <Button Grid.Column="3" Grid.Row="2" Margin="5" Click="ChangeTexture_Click">Change</Button>



                </Grid>
            </StackPanel>
            <StackPanel Grid.Row="2">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Choose normal vector</Label>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>


                    <RadioButton Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" GroupName="NormalVector" IsChecked="{Binding Path=NormalMapOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.constant}}"/>
                    <Label Grid.Column="1" Grid.Row="0">Constant ([0,0,1])</Label>
                    <RadioButton Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" GroupName="NormalVector" IsChecked="{Binding Path=NormalMapOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.fromTexture}}"/>
                    <Label Grid.Column="1" Grid.Row="1">From Texture</Label>
                    <Image Grid.Column="2" Grid.Row="1"  Margin="5" Width="70" Height="20" Stretch="Uniform" Source="{Binding Path=ChosenNormalMapTexture}" />
                    <Button Grid.Column="3" Grid.Row="1" Margin="5" Click="ChangeNormalMapTexture_Click">Change</Button>



                </Grid>
            </StackPanel>
            <StackPanel Grid.Row="3">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Choose normal vector distortion</Label>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>


                    <RadioButton Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" GroupName="NormalVectorDist" IsChecked="{Binding Path=DistMapOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.constant}}"/>
                    <Label Grid.Column="1" Grid.Row="0">None ([0,0,0])</Label>
                    <Label Grid.Column="2" Grid.Row="0">choose Coeff</Label>
                    <xctk:DoubleUpDown  Value ="{Binding Path=Coefficient}" Grid.Column="3" Grid.Row="0" FormatString="F3" Increment=".001"  Maximum="200000.599" />
                    <RadioButton Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" GroupName="NormalVectorDist" IsChecked="{Binding Path=DistMapOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.fromTexture}}"/>
                    <Label Grid.Column="1" Grid.Row="1">From Texture</Label>
                    <Image Grid.Column="2" Grid.Row="1"  Margin="5" Width="70" Height="20" Stretch="Uniform" Source="{Binding Path=ChosenDistTexture}" />
                    <Button Grid.Column="3" Grid.Row="1" Margin="5" Click="ChangeDistTexture_Click">Change</Button>



                </Grid>
            </StackPanel>
            <StackPanel Grid.Row="4">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Choose light color</Label>
                <xctk:ColorPicker Width="150" SelectedColor="{Binding Path=IlluminationModel.LightColor, Converter={StaticResource colorConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></xctk:ColorPicker>
            </StackPanel>
            <StackPanel Grid.Row="5">
                <Label Foreground="#061539" FontWeight="Bold" Margin="5">Choose vector to light source</Label>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <RadioButton Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" GroupName="LightColor" IsChecked="{Binding Path=IlluminationModel.LightVectorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.none}}"/>
                    <Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center">None</Label>
                    <RadioButton Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" GroupName="LightColor" IsChecked="{Binding Path=IlluminationModel.LightVectorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.constant}}"/>
                    <Label Grid.Column="1" Grid.Row="1">Constant ([0,0,1])</Label>
                    <RadioButton Grid.Column="0" Grid.Row="2" VerticalAlignment="Center" GroupName="LightColor" IsChecked="{Binding Path=IlluminationModel.LightVectorOpt, Converter={StaticResource comparisonConverter}, ConverterParameter={x:Static local:RadioButtonsOptions.animated}}"/>
                    <StackPanel Grid.Column="1" Grid.Row="2">
                        <Label >Light animated on sphere</Label>
                        <WrapPanel>
                            <Label>Radius:</Label>
                            <xctk:IntegerUpDown x:Name="radius" Value="{Binding Path=IlluminationModel.LightRadius}" Maximum="6000" Watermark="Enter integer" Width="100"/>
                        </WrapPanel>
                        <Slider Maximum="{Binding Path=IlluminationModel.SliderMax}" Minimum="0" Value="{Binding Path=IlluminationModel.LightPoint}" Margin="5" ValueChanged="Slider_ValueChanged"></Slider>
                    </StackPanel>
                </Grid>
            </StackPanel>
            <Button Grid.Row="6" Margin="10" Click="ApplyLight_Click">Apply light</Button>
            
        </Grid>
        <Grid Grid.Column="1" MouseLeftButtonDown="Grid_MouseLeftButtonDown" MouseMove="MainBorder_MouseMove" MouseLeftButtonUp="Grid_MouseLeftButtonUp" MouseRightButtonDown="Grid_MouseRightButtonDown">
            <Canvas Name="LabelCanvas" Panel.ZIndex="2" Background="Transparent">
            </Canvas>
            <Image  Name="MainImage" Stretch="Fill" Panel.ZIndex="1"></Image>

        </Grid>

    </Grid>
</Window>